version: 2

aliases:
  - &test_1_name MacOS Tests

job-defaults: &default_job_settings
  macos:
    xcode: "10.2.0"
  working_directory: /Users/distiller/project
  environment:
    TZ: "/usr/share/zoneinfo/America/Chicago"
  shell: /bin/bash --login -o pipefail

step-defaults:
  - &save_code_cache
    save_cache:
      key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      paths:
        - /Users/distiller/project
  - &save_gem_cache
    save_cache:
      key: v1-gems-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
  - &restore_code_cache
    restore_cache:
      key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
  - &restore_gem_cache
    restore_cache:
      keys:
        - v1-gems-{{ checksum "Gemfile.lock" }}
        - v1-gems-
  - &save_node_package_cache
    save_cache:
      key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      paths:
        - ~/usr/local/lib/node_modules
  - &restore_node_package_cache
    keys:
      - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - node-v1-{{ .Branch }}-
      - node-v1-
  - &create_output_folder
    run:
      name: Create output folder
      command: mkdir output
  - &install_bundle
    run:
      name: Installing bundle
      command: bundle check || bundle install --path vendor/bundle
  - &install_packages
    run:
      name: Installing packages 
      command: npm install github-release-notes -g
  - &copy_xml_report
    run:
      name: Copy Report.xml
      command: cp fastlane/test_output/report.junit output/Report.xml
      when: always
  - &copy_html_report
    run:
      name: Copy Report.html
      command: cp fastlane/test_output/report.html output/Report.html
      when: always
  - &copy_log
    run:
      name: Copy graphql.log
      command: cp ~/Library/Logs/scan/graphql-graphql.log output/graphql.log
      when: always
  - &store_artifacts
    store_artifacts:
      path: output
  - &store_test_results
    store_test_results:
      path: output

jobs:
  prepare_project:
    <<: *default_job_settings
    steps:
      - run:
          name: Prepare tests
          command: echo "Preparing tests..."
      - checkout
      - run: git submodule update --init
      - *save_code_cache
      - *restore_gem_cache
      - *install_bundle
      - *save_gem_cache

  prepare_node_packages:
    <<: *default_job_settings
    steps:
      - run:
          name: Prepare tests
          command: echo "Preparing tests..."
      - checkout
      - *restore_node_package_cache
      - *install_packages
      - *save_node_package_cache

  *test_1_name:
    <<: *default_job_settings
    steps:
      - *restore_code_cache
      - *restore_gem_cache
      - *create_output_folder
      - *install_bundle
      - run:
          name: Build and run tests
          command: |
            set -o pipefail && xcodebuild test -configuration Release -enableCodeCoverage YES -scheme "graphql_macosTests" -destination 'platform=OS X,arch=x86_64' | xcpretty
          environment:
            LC_ALL: en_US.UTF-8
            LANG: en_US.UTF-8
      - run: bundle exec danger --verbose
      - *copy_xml_report
      - *copy_html_report
      - *copy_log
      - *store_artifacts
      - *store_test_results

workflows:
  version: 2
  test-and-deploy-workflow:
    jobs:
      - prepare_project:
          filters:
            branches:
              only:
                - master
                - develop
                - /^release\/.+$/
                - /^hotfix\/.+$/
                - /^epic\/.+$/
      - prepare_node_packages:
          filters:
            branches:
              only:
                - master
      - *test_1_name:
          requires:
            - prepare_project
      - deployment:
          requires:
            - *test_1_name
      - tag_release:
          filters: 
            branches:
              only:
                - master
          requires: 
            - deployment
            - prepare_node_packages

  test-workflow:
    jobs:
      - start:
          type: approval
          filters:
            branches:
              ignore:
                - master
                - develop
                - /^release\/.+$/
                - /^hotfix\/.+$/
                - /^epic\/.+$/
      - prepare_project:
          requires:
            - start
      - *test_1_name:
          requires:
            - prepare_project
